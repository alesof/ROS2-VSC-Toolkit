"use strict";var x=Object.create;var w=Object.defineProperty;var I=Object.getOwnPropertyDescriptor;var $=Object.getOwnPropertyNames;var D=Object.getPrototypeOf,E=Object.prototype.hasOwnProperty;var C=(s,e)=>{for(var r in e)w(s,r,{get:e[r],enumerable:!0})},h=(s,e,r,i)=>{if(e&&typeof e=="object"||typeof e=="function")for(let o of $(e))!E.call(s,o)&&o!==r&&w(s,o,{get:()=>e[o],enumerable:!(i=I(e,o))||i.enumerable});return s};var g=(s,e,r)=>(r=s!=null?x(D(s)):{},h(e||!s||!s.__esModule?w(r,"default",{value:s,enumerable:!0}):r,s)),S=s=>h(w({},"__esModule",{value:!0}),s);var z={};C(z,{activate:()=>y});module.exports=S(z);var n=g(require("vscode"));var a=g(require("vscode")),b=require("child_process"),l=class{_onDidChangeTreeData=new a.EventEmitter;onDidChangeTreeData=this._onDidChangeTreeData.event;constructor(){console.log("ROS2TopicsProvider initialized")}refresh(){console.log("Refresh called"),this._onDidChangeTreeData.fire()}getChildren(e){return new Promise((r,i)=>{(0,b.exec)("ros2 topic list",(o,t,c)=>{if(o)return console.error(`Error fetching topics: ${o.message}`),i(o);if(c)return console.error(`Error: ${c}`),i(new Error(c));let p=t.split(`
`).filter(v=>v).map(v=>{let f=new a.TreeItem(v,a.TreeItemCollapsibleState.None);return f.command={command:"ros2-topic-viewer.showMessages",title:"Show messages from ${topic}",arguments:[v]},f});r(p)})})}getTreeItem(e){return e}};var d=require("child_process"),u=require("child_process"),T=g(require("fs")),M=g(require("path"));function y(s){let e=new l;n.window.registerTreeDataProvider("ros2TopicsView",e),console.log('Extension "ros2-topic-viewer" is now active!');let r=[],i=n.commands.registerCommand("ros2-topic-viewer.refreshTopics",()=>{e.refresh(),n.window.showInformationMessage("Topics refreshed!")}),o=n.commands.registerCommand("ros2-topic-viewer.showMessages",t=>{let c=r.find(p=>p.title===`Messages for ${t}`);if(c){c.reveal(n.ViewColumn.One);return}let m=n.window.createWebviewPanel("topicMessages",`Messages for ${t}`,n.ViewColumn.One,{enableScripts:!0});r.push(m),W(t,m,r),k(t,m)});s.subscriptions.push(i),s.subscriptions.push(o)}async function _(s,e){if(e.visible===!1)return;let r=(0,u.exec)("ros2 topic info "+s+" --verbose");r.stdout?.on("data",i=>{e.webview.postMessage({command:"pushInfo",message:i.toString()}),r.kill()}),r.stderr?.on("data",i=>{console.error(`Error from process secundary: ${i}`),e.webview.postMessage({command:"error",message:i})})}async function W(s,e,r){e.onDidDispose(()=>{r.splice(r.indexOf(e),1),i&&i.kill()}),e.webview.html=P(s);let i=(0,d.spawn)("ros2",["topic","echo",s]),o=(0,u.exec)("ros2 topic info "+s+" --verbose");i.stdout?.on("data",t=>{if(t.length>1e4){t=t.slice(0,1e4),t=`Unable to visualize the entire message. The message is too big. 

`,e.webview.postMessage({command:"error",message:t.toString()});return}e.webview.postMessage({command:"update",message:t.toString()})}),i.stderr?.on("data",t=>{console.error(`Error: ${t}`),e.webview.postMessage({command:"error",message:t})}),i.on("exit",t=>{console.log(`Process exited with code: ${t}`),e.webview.postMessage({command:"exit",message:`The command has exited with code ${t}.`})}),o.stdout?.on("data",t=>{e.webview.postMessage({command:"pushInfo",message:t}),o.kill()}),o.stderr?.on("data",t=>{console.error(`Error from process secundary: ${t}`),e.webview.postMessage({command:"error",message:t})}),e.onDidChangeViewState(t=>{t.webviewPanel.visible&&i.kill(),t.webviewPanel.visible&&(i=(0,d.spawn)("ros2",["topic","echo",s]),_(s,e))})}async function k(s,e){e.webview.html=P(s);let r=(0,d.spawn)("ros2",["topic","hz",s]),i=(0,d.spawn)("ros2",["topic","bw",s]);r.stdout?.on("data",o=>{console.log(`Data: ${o}`),e.webview.postMessage({command:"updateHz",message:o.toString()})}),r.stderr?.on("data",o=>{console.error(`Error: ${o}`),e.webview.postMessage({command:"error",message:o})}),r.on("exit",o=>{console.log(`Process exited with code: ${o}`),e.webview.postMessage({command:"exit",message:`The command has exited with code ${o}.`})}),i.stdout?.on("data",o=>{o.toString().includes("Subscribed")||e.webview.postMessage({command:"updateBw",message:o.toString()})}),i.stderr?.on("data",o=>{console.error(`Error: ${o}`),e.webview.postMessage({command:"error",message:o})})}function P(s){let e=M.join(__dirname,"..","media","webview.html"),r=T.readFileSync(e,"utf8");return r=r.replace("${topic}",s),r}0&&(module.exports={activate});
