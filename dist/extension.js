"use strict";var M=Object.create;var l=Object.defineProperty;var P=Object.getOwnPropertyDescriptor;var C=Object.getOwnPropertyNames;var D=Object.getPrototypeOf,k=Object.prototype.hasOwnProperty;var x=(r,e)=>{for(var o in e)l(r,o,{get:e[o],enumerable:!0})},h=(r,e,o,t)=>{if(e&&typeof e=="object"||typeof e=="function")for(let s of C(e))!k.call(r,s)&&s!==o&&l(r,s,{get:()=>e[s],enumerable:!(t=P(e,s))||t.enumerable});return r};var v=(r,e,o)=>(o=r!=null?M(D(r)):{},h(e||!r||!r.__esModule?l(o,"default",{value:r,enumerable:!0}):o,r)),E=r=>h(l({},"__esModule",{value:!0}),r);var G={};x(G,{activate:()=>$});module.exports=E(G);var n=v(require("vscode"));var a=v(require("vscode")),b=require("child_process"),w=class{_onDidChangeTreeData=new a.EventEmitter;onDidChangeTreeData=this._onDidChangeTreeData.event;constructor(){console.log("ROS2TopicsProvider initialized")}refresh(){console.log("Refresh called"),this._onDidChangeTreeData.fire()}getChildren(e){return new Promise((o,t)=>{(0,b.exec)("ros2 topic list",(s,i,c)=>{if(s)return console.error(`Error fetching topics: ${s.message}`),t(s);if(c)return console.error(`Error: ${c}`),t(new Error(c));let f=i.split(`
`).filter(m=>m).map(m=>{let p=new a.TreeItem(m,a.TreeItemCollapsibleState.None);return p.command={command:"ros2-topic-viewer.showMessages",title:"Show messages from ${topic}",arguments:[m]},p});o(f)})})}getTreeItem(e){return e}};var g=require("child_process"),u=require("child_process"),T=v(require("fs")),S=v(require("path"));function $(r){let e=new w;n.window.registerTreeDataProvider("ros2TopicsView",e);let o=[],t=n.commands.registerCommand("ros2-topic-viewer.refreshTopics",()=>{e.refresh(),n.window.showInformationMessage("Topics refreshed!")}),s=n.commands.registerCommand("ros2-topic-viewer.showMessages",i=>{let c=o.find(f=>f.title===`Messages for ${i}`);if(c){c.reveal(n.ViewColumn.One);return}let d=n.window.createWebviewPanel("topicMessages",`Messages for ${i}`,n.ViewColumn.One,{enableScripts:!0});o.push(d),O(i,d,o),y(i,d)});r.subscriptions.push(t),r.subscriptions.push(s)}async function _(r,e){if(e.visible===!1)return;let o=(0,u.exec)("ros2 topic info "+r+" --verbose");o.stdout?.on("data",t=>{e.webview.postMessage({command:"pushInfo",message:t.toString()}),o.kill()}),o.stderr?.on("data",t=>{console.error(`Error from process secundary: ${t}`),e.webview.postMessage({command:"error",message:t})})}async function O(r,e,o){e.onDidDispose(()=>{o.splice(o.indexOf(e),1),t&&t.kill(),s&&s.kill()}),e.webview.html=I(r);let t=(0,g.spawn)("ros2",["topic","echo",r]),s=(0,u.exec)("ros2 topic info "+r+" --verbose");t.stdout?.on("data",i=>{if(i.length>1e4){i=i.slice(0,1e4),i=`Unable to visualize the entire message. The message is too big. 

`,e.webview.postMessage({command:"error",message:i.toString()});return}i.toString().includes("fastrtps_port")||e.webview.postMessage({command:"update",message:i.toString()})}),t.stderr?.on("data",i=>{console.error(`Error: ${i}`),e.webview.postMessage({command:"error",message:i})}),t.on("exit",i=>{console.log(`Process exited with code: ${i}`),e.webview.postMessage({command:"exit",message:`The command has exited with code ${i}.`})}),s.stdout?.on("data",i=>{i.toString().includes("fastrtps_port")||(e.webview.postMessage({command:"pushInfo",message:i}),s.kill())}),s.stderr?.on("data",i=>{console.error(`Error from process secundary: ${i}`),e.webview.postMessage({command:"error",message:i})}),e.onDidChangeViewState(i=>{i.webviewPanel.visible?(t&&t.kill("SIGCONT"),s&&s.kill("SIGCONT"),_(r,e)):(t&&t.kill("SIGSTOP"),s&&s.kill("SIGSTOP"))})}async function y(r,e){e.webview.html=I(r);let o=(0,g.spawn)("ros2",["topic","hz",r]),t=(0,g.spawn)("ros2",["topic","bw",r]);e.onDidDispose(()=>{o&&o.kill(),t&&t.kill()}),o.stdout?.on("data",s=>{s.toString().includes("fastrtps_port")||e.webview.postMessage({command:"updateHz",message:s.toString()})}),o.stderr?.on("data",s=>{console.error(`Error: ${s}`),e.webview.postMessage({command:"error",message:s})}),o.on("exit",s=>{e.webview.postMessage({command:"exit",message:`The command has exited with code ${s}.`})}),t.stdout?.on("data",s=>{s.toString().includes("fastrtps_port")||s.toString().includes("Subscribed")||e.webview.postMessage({command:"updateBw",message:s.toString()})}),t.stderr?.on("data",s=>{console.error(`Error: ${s}`),e.webview.postMessage({command:"error",message:s})}),e.onDidChangeViewState(s=>{if(s.webviewPanel.visible){o.kill("SIGCONT"),t.kill("SIGCONT");return}else o.kill("SIGSTOP"),t.kill("SIGSTOP")})}function I(r){let e=S.join(__dirname,"..","media","webview.html"),o=T.readFileSync(e,"utf8");return o=o.replace("${topic}",r),o}0&&(module.exports={activate});
